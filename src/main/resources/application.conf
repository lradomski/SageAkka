server
{
  loglevel = "INFO"

  akka {
    stdout-loglevel = "DEBUG"

    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      debug {
        autoreceive = on
        lifecycle = on
      }
    }

    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      log-sent-messages = on
      log-received-messages = on
      log-remote-lifecycle-events = on
      netty.tcp {
        hostname = "127.0.0.1"
        port = -1 #port must be configured at run-time, don't set this here
      }
    }
  }
}


common
  {
    loglevel = "INFO"

    akka {
      stdout-loglevel = "INFO"
      log-dead-letters = off

      actor {
        provider = "akka.remote.RemoteActorRefProvider"
        debug {
          autoreceive = off
          lifecycle = off
          fsm = off
        }

        serializers {
          trade = "com.tr.analytics.sage.akka.data.serializers.TradeSerializer"
          totals = "com.tr.analytics.sage.akka.data.serializers.TradeTotalsSerializer"
        }

        serialization-bindings {
          //          "com.tr.analytics.sage.akka.data.StartCalcMultiRic" = proto
          //          "com.tr.analytics.sage.akka.data.StartCalc" = proto
          //          "com.tr.analytics.sage.akka.data.CalcResultCoreCore" = proto
          //          "com.tr.analytics.sage.akka.data.CalcUpdate" = proto
          //          "com.tr.analytics.sage.akka.data.SageIdentify" = proto
          //          "com.tr.analytics.sage.akka.data.SageIdentity" = proto
          "com.tr.analytics.sage.shard.engine.TradeReal" = trade
          "com.tr.analytics.sage.akka.data.TradeTotals" = totals

        }

      }

      remote {
        log-sent-messages = off
        log-received-messages = off
        log-remote-lifecycle-events = off
        enabled-transports = ["akka.remote.netty.tcp"]
      }
    }

  }



sage-script-client
  {

    akka {

      actor {
        debug {
        }
      }

      remote {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 0 #assign automatically
        }
      }

      actor.assembler {
        /asm {
          router = broadcast-robin-group
          routees.paths = [
            "akka.tcp://sage-shard@127.0.0.1:4000/user/assembler",
            //"akka.tcp://sage-shard@127.0.0.1:4001/user/trade-source",
            //"akka.tcp://sage-shard@127.0.0.1:4002/user/trade-source"
          ]
        }
      }

    }
  }

sage-assembler
  {
    akka {
      actor {
        debug {
        }
      }

      remote {
        netty.tcp {
          hostname = "127.0.0.1"
          port = -1 #port must be configured at run-time, don't set this here
        }
      }

      actor.deployment {
        /assembler/shards {
          router = broadcast-group
          routees.paths = [
            "akka.tcp://sage-shard@127.0.0.1:3000/user/shard",
            "akka.tcp://sage-shard@127.0.0.1:3001/user/shard",
            "akka.tcp://sage-shard@127.0.0.1:3002/user/shard"
          ]
        }
      }
    }

  }


sage-shard
  {

    dispatcher-long-calc {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher

      # What kind of ExecutionService to use
      executor = "fork-join-executor"

      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 2
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
      }

      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
    }

    akka {

      actor {
        provider = "akka.remote.RemoteActorRefProvider"
        debug {
        }
      }

      remote {
        netty.tcp {
          hostname = "127.0.0.1"
          port = -1 #port must be configured at run-time, don't set this here
        }
      }

      actor.deployment {
        /trade-sources {
          router = broadcast-group
          routees.paths = [
            "akka.tcp://sage-trades@127.0.0.1:2000/user/trade-source",
//            "akka.tcp://sage-trades@127.0.0.1:2001/user/trade-source",
//            "akka.tcp://sage-trades@127.0.0.1:2002/user/trade-source"
          ]
        }
      }

    }
  }

sage-trades
  {
    akka {
      actor {

        debug {
        }

      }

      remote {
        netty.tcp {
          hostname = "127.0.0.1"
          port = -1 #port must be configured at run-time, don't set this here
        }
      }

//      actor.deployment {
//        /trade-sources {
//          router = broadcast-group
//          routees.paths = [
//            "akka.tcp://sage-shard@127.0.0.1:4000/user/trade-source",
//            //            "akka.tcp://sage-shard@127.0.0.1:4001/user/trade-source",
//            //            "akka.tcp://sage-shard@127.0.0.1:4002/user/trade-source"
//          ]
//        }
//      }

    }
  }